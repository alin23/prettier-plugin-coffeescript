- adjust heredoc/heregex indent with surrounding indentation level
- preserve 2e308 (or anything else that would compile to Infinity)?
- how do elisions and breaking arrays interplay?
- make comma option less naive (eg either omit or dedent comma if the arg has indentation eg breaking function or control)
- where to draw the line with what to parenthesize when splatting - you can omit a lot of parens but it looks weird eg [(a if f)?.b ? []...]
- don't need to parenthesize postfix for comprehensions (and probably other things?) when assignment breaks eg:
  array2 =
    (a + b for [a, b] from [[10, 20], [30, 40], [50, 60]] when a + b >= 70)
  this is kind of similar to needing to preserve breaking in certain cases since there's a semantic difference eg a = b if null vs
  a =
    b if null
  i guess you could achieve the same thing with parenthesization but seems nice to support this
- revisit bracketSpacing logic
- nicely break/indent interpolated expressions that will themselves break, eg chains are ugly
- should it preserve tab character inside regexp?
- shouldGroupLast on heregex
- watch out for the difference between single-property object with postfix conditional:
  a: b if c
  vs
  a:
    b if c
- would be nice if object as rhs of assignment broke if assignment broke, eg
  a =
    b: c
    d: e
  instead of
  a =
    b: c, d: e
- preserve switch then alignment?
- can't safely unparenthesize calls (etc) if comma isn't none (since a trailing comma continues the line)
- refine dedented comma logic so that if object is printing inline, don't print dedented comma
- now that we're trying to inline objects, should probably default to adding braces around inline nested objects
  - does that imply the need for a respect implicit object option? or should we just always try to respect what they did for nested objects?
- linebreak on other binary operators eg +?
- comments:
  - get comment-only class body to print indented
  - line comment at end of switch case body is outdenting to the next when line
- update to support flow() etc formatting
- nasty one from tests, should force call parens?:
  x =
    fn bar: {
      foo: 123
    } if not condition
- add arrays to respectBreak?
- safe to omit call parens in for when clause?
